#!/sbin/runscript
# Copyright 1999-2016 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header$

COIN=${COIN:-${SVCNAME:0:-1}}

. /etc/coins/${COIN}.inf

# backward compatibility for existing gentoo layout
#
if [ -d "/var/lib/${COIN}/.${COIN}" ]; then
	BITCOIND_DATADIR_DEFAULT="/var/lib/${COIN}/.${COIN}"
else
	BITCOIND_DATADIR_DEFAULT="/var/lib/${SVCNAME}"
fi

BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/coins/${COIN}.conf}
BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/coins}
BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/${SVCNAME}.pid}
BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DATADIR_DEFAULT}}
BITCOIND_USER=${BITCOIND_USER:-blockchain}
BITCOIND_GROUP=${BITCOIND_GROUP:-blockchain}
BITCOIND_BIN_DEFAULT=/usr/bin/${SVCNAME}
BITCOIND_WALLET_PATH=${BITCOIND_WALLET_PATH:-${BITCOIND_DATADIR}/wallet.dat}

if [[ ${COIN_FAMILY} == "cryptonote" ]]; then
    if [ ! -x ${BITCOIND_BIN_DEFAULT} ]; then
	BITCOIND_BIN_DEFAULT=/usr/bin/${COIN}_walletd
	BITCOIND_HAVE_WALLET=yes
    fi
fi

BITCOIND_BIN=${BITCOIND_BIN:-${BITCOIND_BIN_DEFAULT}}

name="${COIN^} Daemon"
description="Crypto-currency p2p network daemon"

command="${BITCOIND_BIN}"
start_stop_daemon_args="-u ${BITCOIND_USER} -e HOME=${BITCOIND_DATADIR} \
                        -N ${BITCOIND_NICE:-19}"
procname="${SVCNAME}"

# cryptonote
command_args="--data-dir \"${BITCOIND_DATADIR}\" --local --daemon \
	    --log-file \"${BITCOIND_DATADIR}/debug.log\" \
	    ${BITCOIND_OPTS}"

# bitcoin, whatever
if [ ! ${COIN_FAMILY} == "cryptonote" ]; then
    command_args="-pid=\"${BITCOIND_PIDFILE}\" \
		-conf=\"${BITCOIND_CONFIGFILE}\" \
		-datadir=\"${BITCOIND_DATADIR}\" \
		-daemon \
		${BITCOIND_OPTS}"
    required_files="${BITCOIND_CONFIGFILE}"
    start_stop_daemon_args+=" -w 2000"
    pidfile="${BITCOIND_PIDFILE}"
fi


depend() {
    need localmount net
}

start_pre() {
    checkpath -d \
	      --mode 0750 \
	      --owner "${BITCOIND_USER}:${BITCOIND_GROUP}" \
	      "${BITCOIND_DATADIR}"

    checkpath -d \
	      --mode 0755 \
	      --owner "${BITCOIND_USER}:${BITCOIND_GROUP}" \
	      "${BITCOIND_PIDDIR}"

    if [ -f "${BITCOIND_CONFIGFILE}" ]; then
	checkpath -f \
		  --mode 0660 \
		  --owner "${BITCOIND_USER}:${BITCOIND_GROUP}" \
		  "${BITCOIND_CONFIGFILE}"
	[ ${COIN_FAMILY} == "cryptonote" ] && \
	    command_args+=" --config \"${BITCOIND_CONFIGFILE}\""
	checkconfig || return 1
    fi

    # cryptonote implied
    if [ -n ${BITCOIND_HAVE_WALLET} ]; then
	local WALLET_PATH=`sed -ne 's/^container-file *= *\(.*\)$/\1/p' "${BITCOIND_CONFIGFILE}"`
	if [ -z ${WALLET_PATH} ]; then
	    # command_args+=" -w \"${BITCOIND_WALLET_PATH}\""
	    # both parameters must be in same place (config or args)
	    WALLET_PATH=${BITCOIND_WALLET_PATH}
	    echo "container-file = ${WALLET_PATH}" >> ${BITCOIND_CONFIGFILE}
	fi
	# initial wallet container generation
	[ -f "${WALLET_PATH}" ] || bash -c "${command} ${command_args} -g"
	checkpath -f \
		  --mode 0600 \
		  --owner "${BITCOIND_USER}:${BITCOIND_GROUP}" \
		  "${WALLET_PATH}"
    fi
}

checkconfig() {
    local pass_var='rpcpassword' \
	  pass_re='^rpcpassword='

    if [ ${COIN_FAMILY} == "cryptonote" ]; then
	pass_var='container-password'
	pass_re='^container-password *='
    fi

    if ! grep -qs ${pass_re} "${BITCOIND_CONFIGFILE}" ; then
	eerror ""
	eerror "ERROR: You must set a secure ${pass_var} to run ${SVCNAME}."
	eerror "The setting must appear in ${BITCOIND_CONFIGFILE}"
	eerror ""
	eerror "This password is security critical to securing wallets "
	[ ${COIN_FAMILY} == "cryptonote" ] || \
	    eerror "and must not be the same as the rpcuser setting."
	eerror "You can generate a suitable random password using the following"
	eerror "command from the shell:"
	eerror ""
	eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
	eerror ""
	eerror "It is also recommended that you also set alertnotify so you are "
	eerror "notified of problems:"
	eerror ""
	eerror "ie: alertnotify=echo %%s | mail -s \"${COIN} Alert\"" \
	       "admin@foo.com"
	eerror ""
	return 1
    fi
}
